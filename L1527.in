#!/usr/bin/env python
# -*- coding: utf-8 -*-
import numpy as np
import cst

def get_square_ntheta(r_range, nr):
    import numpy as np
    dlogr = np.log10(r_range[1]/r_range[0])/nr
    dr_over_r = 10**dlogr -1 
    return int(round(0.5*np.pi/dr_over_r)) 

class Parameters:
    pass

# General
debug = 1
object_name = "L1527"
dpc = 137
Tenv = 10

# Physical Model
model = Parameters()
model.plot = 1
model.ire_model = {1:"CM", 2:"Simple"}[1]
model.submodel = {0:None, 1:"CM", 2:"Simple"}[0] # 0:None, 0:'CM', 1:'Simple', 2:'TSC'
# model.norot = 1
model.disk = 0
model.r_in = 1 * cst.au
model.r_out = 1e4 * cst.au
model.nr = 601
model.theta_in = 1e-6
model.theta_out = np.pi/2
model.ntheta = get_square_ntheta([model.r_in, model.r_out], model.nr)#int(0.5*np.pi/(np.log10(model.r_out)-np.log10(model.r_in))*model.nr) #181  # 91
model.phi_in = -np.pi
model.phi_out = +np.pi
model.nphi = 1
model.Tenv = Tenv
model.r_CR = 200 * cst.au
model.Mstar = 0.18 * cst.Msun
model.t = None
model.Omega = None
model.j0 = None
model.Tdisk = 70
model.disk_star_fraction = 0.1
model.cavity_angle = 0 # degree from z-axis, disk_angle = 2*(90-cavity_angle)
model.simple_density = 0  # True
model.counterclockwise_rotation = False
model.fn_model_pkl = "model_L1527.pkl"
# model.dn_model_pkl = "radmc"
# model.use_solution_0th = 0

# radmc parameters
radmc = Parameters()
radmc.plot = 1
radmc.nphot = 1000000
radmc.r_in = 100 * cst.au
radmc.r_out = 1e3 * cst.au
radmc.nr = 128 #256 #256 #128 # 128 #1024 #128
# dr(100au) ~ 100au * dlogr * 2.3 = 230 * 1/nr au  
radmc.theta_in = 0
radmc.theta_out = np.pi/2
radmc.ntheta = get_square_ntheta([radmc.r_in, radmc.r_out], radmc.nr) #int(0.5*np.pi/(np.log10(radmc.r_out)-np.log10(radmc.r_in))*radmc.nr) #128  # 91  # Nth = 90/dlogr * Nr 
radmc.phi_in = -np.pi
radmc.phi_out = np.pi
radmc.nphi = 1
radmc.Lstar = 2.75 * cst.Lsun
radmc.Rstar = 1 * cst.Rsun
radmc.fdg = 0.0  # 0.01
radmc.mol_abun = 1e-20
radmc.mol_name = {1:"c18o", 2:"cch", 3:"c18omod"}[1]  # c18o or cch
radmc.m_mol = 28 * cst.amu
iline = 1
#radmc.v_fwhm = 0.04 * cst.kms  # or give Tenv
radmc.Tenv = Tenv
# 1: tdust = tgas , tgas = const
# 2: tdust = mctherm , tgas = tdust
radmc.temp_mode = {1:"const", 2:"mctherm"}[1]
radmc.line = True
radmc.turb = False
radmc.lowreso = False
radmc.subgrid = True
radmc.autoset = True
radmc.fn_model_pkl = model.fn_model_pkl
radmc.fn_radmcset_pkl = 'set_radmc.pkl'

sobs = Parameters()
#sobs.ovserve = 1 # True
sobs.filename = "sobs"
sobs.dpc = dpc
sobs.iline = iline  # 1 # see table
sobs.sizex_au = 16 * sobs.dpc
sobs.sizey_au = 16 * sobs.dpc
sobs.pixsize_au = 0.02 * sobs.dpc
sobs.vwidth_kms = 3  # 5.12
sobs.dv_kms = 0.02  # 0.04
sobs.incl = 85  # angle between direction to us , 0: face-on
sobs.phi = 0
sobs.posang = 95  # angle between y-axis, ccw is positive
sobs.rect_camera = True
sobs.omp = True
sobs.n_thread = 16

fitsa = Parameters()
fitsa.filename = {1:"sobs", 2:"YO_noconv"}[1] # sobs.filename
fitsa.dpc = dpc
fitsa.convolution_pvdiagram = 1  #True
fitsa.convolution_mom0map = 0  #True
fitsa.convolver = {1:"normal", 2:"fft"}[2]
fitsa.posang_PV = sobs.posang
fitsa.oplot_KeplerRotation = 0
fitsa.oplot_LocalPeak_Vax = 0
fitsa.oplot_LocalPeak_Pax = 0
fitsa.oplot_LocalPeak_2D = 1
fitsa.oplot_Maximums_2D = 1
fitsa.Mstar = 0.18
fitsa.beama_au = 0.4 * fitsa.dpc
fitsa.beamb_au = 0.9 * fitsa.dpc
fitsa.beam_posang = -41
fitsa.vwidth_kms = 0.5
fitsa.plotmode_PV = {1:"grid", 2:"contour", 3:"contourf"}[1]
fitsa.convolve_PV_p = True
fitsa.convolve_PV_v = 1 # True  #
fitsa.pointsource_test = False

#if model=="CM":
#    model.ire_model = "CM"
#    radmc.temp_mode = "mctherm"
#elif model=="Simple":
#    model.ire_model = "Simple"
#    radmc.temp_mode = "const"

